import{s as i,p as u}from"./supabaseClient-79udjUpP.js";async function g(){const{data:e,error:n}=await i.from("profiles").select("id,email,username");if(n){console.error("Błąd ładowania profili:",n);return}u.clear(),e.forEach(({id:t,email:r,username:c})=>{u.set(t,{email:r,username:c})})}function f(e){const n=u.get(e);return n&&(n.username||n.email)||e}let s=null,a=null;const p=document.getElementById("contactsList"),o=document.getElementById("messages"),w=document.getElementById("inputMsg"),y=document.getElementById("sendBtn");async function b(){const{data:{session:e}}=await i.auth.getSession();if(!(e!=null&&e.user)){window.location.href="login.html";return}s=e.user,await g(),B(),E(),T(s),setInterval(g,10*60*1e3)}async function B(){const{data:e,error:n}=await i.rpc("get_other_users",{current_email:s.email});if(n)return alert("Błąd ładowania kontaktów");p.innerHTML="",e.forEach(t=>{const r=document.createElement("li");r.dataset.id=t.id,r.textContent=f(t.id),r.onclick=()=>C(t),p.appendChild(r)})}async function C(e){a={id:e.id,username:f(e.id)},o.innerHTML="";const{data:n,error:t}=await i.from("messages").select("*").eq("sender",s.id).eq("receiver",e.id),{data:r,error:c}=await i.from("messages").select("*").eq("sender",e.id).eq("receiver",s.id);if(t||c)return console.error("Błąd ładowania wiadomości:",t||c),alert("Błąd ładowania wiadomości");const h=[...n,...r].sort((l,v)=>new Date(l.created_at)-new Date(v.created_at));for(const l of h)await m(l);o.scrollTop=o.scrollHeight}function E(){y.onclick=async()=>{const e=w.value.trim();if(!e||!a)return;const{error:n}=await i.from("messages").insert({sender:s.id,receiver:a.id,text:e});if(n)return alert("Błąd wysyłania");w.value=""}}async function m(e){const n=e.sender===s.id?"Ty":f(e.sender),t=document.createElement("div");t.textContent=`${n}: ${e.text}`,o.appendChild(t),o.scrollTop=o.scrollHeight}let d=null;function T(e){d&&d.unsubscribe(),d=i.channel(`messages_channel_${e.id}`),d.on("postgres_changes",{event:"INSERT",schema:"public",table:"messages",filter:`receiver=eq.${e.id}`},async n=>{const t=n.new;a&&(t.sender===a.id&&t.receiver===s.id||t.sender===s.id&&t.receiver===a.id)&&await m(t)}).on("postgres_changes",{event:"INSERT",schema:"public",table:"messages",filter:`sender=eq.${e.id}`},async n=>{const t=n.new;a&&(t.sender===s.id&&t.receiver===a.id||t.sender===a.id&&t.receiver===s.id)&&await m(t)}).subscribe()}b();
